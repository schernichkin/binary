
==================== FINAL INTERFACE ====================
2019-05-22 17:18:02.116520213 UTC

interface binary-0.8.7.0-BLOwEKiKlD84pHPCNhnRK5:Data.Binary 8065
  interface hash: df8356dd2e52fd3c13d5071bd9df57b4
  ABI hash: 3f1175a92663045d60efd6420b410f10
  export-list hash: 3d8073a7ddac26154cec89058847beaf
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9dfddda2bedb3e0d280ed9c5054e61b6
  opt_hash: 5835274e0c52a5d281a4b935bfdb5c93
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  GHC.Word.byteSwap16
  GHC.Word.byteSwap32
  GHC.Word.byteSwap64
  Data.Binary.decode
  Data.Binary.decodeFile
  Data.Binary.decodeFileOrFail
  Data.Binary.decodeOrFail
  Data.Binary.encode
  Data.Binary.encodeFile
  Data.Binary.Get.getWord8
  Data.Binary.Put.putWord8
  GHC.Word.Word16
  GHC.Word.Word32
  GHC.Word.Word64
  Data.Binary.Class.Binary{Data.Binary.Class.get Data.Binary.Class.put Data.Binary.Class.putList}
  Data.Binary.Class.GBinaryGet{Data.Binary.Class.gget}
  Data.Binary.Class.GBinaryPut{Data.Binary.Class.gput}
  Data.Binary.Get.Internal.Get
  Data.Binary.Put.Put
  GHC.Word.Word8
  GHC.Types.Word
module dependencies: Data.Binary.Builder Data.Binary.Class
                     Data.Binary.FloatCast Data.Binary.Generic Data.Binary.Get
                     Data.Binary.Get.Internal Data.Binary.Internal Data.Binary.Put
package dependencies: array-0.5.3.0 base-4.12.0.0
                      bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      ghc-prim-0.5.3 integer-gmp-1.0.2.0
orphans: binary-0.8.7.0-BLOwEKiKlD84pHPCNhnRK5:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:Data.Word 6b968b6c7df442cfcad986e497aee095
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.IOMode 8012a3f94976206c971b9384804b372a
import  -/  base-4.12.0.0:GHC.Word 36bd327b03ce8a144ab8e66a53975837
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  Data.Binary.Class b9531796075cf52210d660e03238719d
  exports: 3a5c73d9e292c3c39d7e814f98f1f5fb
  Binary 1e74ce561dbc2ee6a089ac9a6874bdf4
  GBinaryGet b5ef20ff2c01a09036d7b8fd896a0d17
  GBinaryPut f6d7ccb833dfe75ee08b778ac5c1a3b5
  get ac8578b64b4e6e200db820047e0c619c
  gget 4655f27706404aa03aa46d9f29e685cf
  gput b2ae1caa5cc2b294efb078ccfe3ac2b8
  put 8d8c38ee4e74960eb14d254347746014
  putList 08eb342c6ffac97ac44077fa09b2b50a
import  -/  Data.Binary.Generic a22fb7808ee5bea94f33f2d71d5d9f4e
  exports: 87252c9e6dc8f1a2d500955439e4f13f
import  -/  Data.Binary.Get ff9c2260189d4b12b1f075c0f0ce14c6
  exports: 8c4fc30bb8f08ebabe6c413e8ef3a3ba
  ByteOffset 901a903cbb26b6e9ac2c0d699c3400d1
  Done 700dead8de7734e843be4c74f15e6593
  Fail 7c9c9daf5e90fc8dedb8016a84f759ce
  Partial dac90ef3050dcb8810005697c93ccaf8
  getWord8 dfc835d24b3c64d45643d75f94f4204b
  runGet 4bf389532760461bc2c22a911f69433a
  runGetIncremental 8b54e97cdb19a34908feb2a7429edc1d
  runGetOrFail fca19fee187fd75d29042ea61f3d7760
import  -/  Data.Binary.Get.Internal 72d9f9f5cb4680e87b57f70e12a256ec
  Get a186c9537e26c2f269fcb2c351eb0f38
import  -/  Data.Binary.Put 61a573420501fe256acd718e92576610
  exports: 5058fc1ddc2527395c5542112755645b
  Put d58a34c7ddb8da4b063cc60b7ef9f490
  putWord8 6c466f4379a8c4619f31202e0de6d2e1
  runPut 4a4e359e7717f31a7443fa77411a0043
import  -/  bytestring-0.10.8.2:Data.ByteString fd8cecf441c361eb2e989315be3b33ab
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy 17bbfcb66adfeb54389d1792c4493dec
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Internal 2323410d496b66c6a46f7c8b483c1856
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
addDependentFile "/home/schernichkin/.stack/programs/x86_64-linux/ghc-8.6.5/lib/ghc-8.6.5/include/ghcversion.h" 43db44f9bb88490c2fa995e5f5ec33f2
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/autogen/cabal_macros.h" e6f1f8b8bb6582b087a6681896f0d62a
addDependentFile "/usr/include/stdc-predef.h" b11071912035aeb144fe65c00cfe2168
d626f29a14702fd3f65d20074123ff16
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Binary.$trModule3
                   Data.Binary.$trModule1) -}
8ca6a53ff735731272b34b7bd938242b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Data.Binary.$trModule2) -}
e1dbe9d29750ab7cd3ee7aab66e2bf29
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Data.Binary"#) -}
91305d0ddb8805027cc6fd98fd1aa664
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Data.Binary.$trModule4) -}
568da459171f8b2e11b507001a03ac14
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("binary-0.8.7.0-BLOwEKiKlD84pHPCNhnRK5"#) -}
f1c438929d6e2ae0cfc6087063c64e07
  $wdecode ::
    Data.Binary.Get.Internal.Get a
    -> Data.ByteString.Lazy.Internal.ByteString -> a
  {- Arity: 2, Strictness: <C(C(S)),1*C1(C1(U))><L,U>, Inline: [2],
     Unfolding: (\ @ a
                   (ww :: Data.Binary.Get.Internal.Get a)
                   (w :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Data.Binary.Get.runGet3
                   @ a
                   (Data.Binary.Get.$wpoly_go
                      @ a
                      (Data.Binary.Get.Internal.runGetIncremental1
                         @ a
                         (ww `cast` (Data.Binary.Get.Internal.N:Get[0] <a>_R)
                            @ a
                            Data.ByteString.empty
                            (Data.Binary.Get.Internal.$WDone @ a)))
                      0#)
                   w) -}
8fab3f1307a57caf8eb4145eca8e8714
  $wdecodeOrFail ::
    Data.Binary.Get.Internal.Get a
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either
         (Data.ByteString.Lazy.Internal.ByteString,
          Data.Binary.Get.ByteOffset, GHC.Base.String)
         (Data.ByteString.Lazy.Internal.ByteString,
          Data.Binary.Get.ByteOffset, a)
  {- Arity: 2, Strictness: <C(C(S)),1*C1(C1(U))><L,U>, Inline: [2],
     Unfolding: (\ @ a
                   (ww :: Data.Binary.Get.Internal.Get a)
                   (w :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Data.Binary.Get.runGetOrFail1
                   @ a
                   (Data.Binary.Get.$wpoly_go
                      @ a
                      (Data.Binary.Get.Internal.runGetIncremental1
                         @ a
                         (ww `cast` (Data.Binary.Get.Internal.N:Get[0] <a>_R)
                            @ a
                            Data.ByteString.empty
                            (Data.Binary.Get.Internal.$WDone @ a)))
                      0#)
                   w) -}
30a7b64fa3e0c1d2e879ec841e7b4e39
  decode ::
    Data.Binary.Class.Binary a =>
    Data.ByteString.Lazy.Internal.ByteString -> a
  {- Arity: 2, Strictness: <S(LC(C(S))L),1*U(A,1*C1(C1(U)),A)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.Binary.Class.Binary a)
                   (w1 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 case w of ww { Data.Binary.Class.C:Binary ww1 ww2 ww3 ->
                 Data.Binary.$wdecode @ a ww2 w1 }) -}
95f23902b268874dcb2e0a582266e100
  decodeFile ::
    Data.Binary.Class.Binary a => GHC.IO.FilePath -> GHC.Types.IO a
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(C1(U)),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Binary.decodeFile1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Binary.Class.Binary a>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
bded470ed73388dd7f988badc2ffa3b9
  decodeFile1 ::
    Data.Binary.Class.Binary a =>
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(C1(U)),A)><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dBinary :: Data.Binary.Class.Binary a)
                   (f :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Data.Binary.decodeFile3
                        @ a
                        $dBinary
                        f
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left ds
                   -> case ds of wild1 { (,) ds2 str ->
                      case Data.Binary.decodeFile2 @ a str
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                      of {} }
                   Data.Either.Right x -> (# ipv, x #) } }) -}
58617eaa0f4cba1921511a236a79e25a
  decodeFile2 :: GHC.Base.String -> GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x -}
979f625e30464225d1e065b499bc1f1a
  decodeFile3 ::
    Data.Binary.Class.Binary a =>
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Data.Binary.Get.ByteOffset, GHC.Base.String) a #)
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(C1(U)),A)><L,U><S,U>,
     Unfolding: (\ @ a
                   ($dBinary :: Data.Binary.Class.Binary a)
                   (f :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 System.IO.withBinaryFile1
                   @ (Data.Either.Either
                        (Data.Binary.Get.ByteOffset, GHC.Base.String) a)
                   f
                   GHC.IO.IOMode.ReadMode
                   (\ (h :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                    Data.Binary.decodeFile4
                      @ a
                      (Data.Binary.Get.$wpoly_go
                         @ a
                         (Data.Binary.Get.Internal.runGetIncremental1
                            @ a
                            ((Data.Binary.Class.get @ a $dBinary)
                               `cast`
                             (Data.Binary.Get.Internal.N:Get[0] <a>_R)
                               @ a
                               Data.ByteString.empty
                               (Data.Binary.Get.Internal.$WDone @ a)))
                         0#)
                      h)
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     (Data.Binary.Get.ByteOffset, GHC.Base.String) a>_R))
                   eta) -}
3a9d3e417059aa2185d4302834756177
  decodeFile4 ::
    Data.Binary.Get.Decoder b
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Data.Binary.Get.ByteOffset, GHC.Base.String) b #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
ea4b4bf1930d6782141338f7107d40d8
  decodeFileOrFail ::
    Data.Binary.Class.Binary a =>
    GHC.IO.FilePath
    -> GHC.Types.IO
         (Data.Either.Either
            (Data.Binary.Get.ByteOffset, GHC.Base.String) a)
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(C1(U)),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Binary.decodeFile3
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Binary.Class.Binary a>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  (Data.Binary.Get.ByteOffset, GHC.Base.String) a>_R)) -}
c21598259e77b394c0ffb8fc1e738f3e
  decodeOrFail ::
    Data.Binary.Class.Binary a =>
    Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either
         (Data.ByteString.Lazy.Internal.ByteString,
          Data.Binary.Get.ByteOffset, GHC.Base.String)
         (Data.ByteString.Lazy.Internal.ByteString,
          Data.Binary.Get.ByteOffset, a)
  {- Arity: 2, Strictness: <S(LC(C(S))L),1*U(A,1*C1(C1(U)),A)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.Binary.Class.Binary a)
                   (w1 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 case w of ww { Data.Binary.Class.C:Binary ww1 ww2 ww3 ->
                 Data.Binary.$wdecodeOrFail @ a ww2 w1 }) -}
b19f19976bdd3b9e8019a090f395575f
  encode ::
    Data.Binary.Class.Binary a =>
    a -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,1*U(1*C1(U(A,U)),A,A)><L,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dBinary :: Data.Binary.Class.Binary a) ->
                 let {
                   g :: a -> Data.Binary.Put.Put = Data.Binary.Class.put @ a $dBinary
                 } in
                 \ (x :: a) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case (g x)
                           `cast`
                         (Data.Binary.Put.N:PutM[0] <()>_N) of wild { Data.Binary.Put.PairS ds b ->
                    b })) -}
f60484e793ffe5a0a8adbb67cfaea625
  encodeFile ::
    Data.Binary.Class.Binary a =>
    GHC.IO.FilePath -> a -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(1*C1(U(A,U)),A,A)><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Binary.encodeFile1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Binary.Class.Binary a>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R <a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d1551346df5545731304b8b24ad5b405
  encodeFile1 ::
    Data.Binary.Class.Binary a =>
    GHC.IO.FilePath
    -> a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(1*C1(U(A,U)),A,A)><L,U><L,U><S,U>,
     Unfolding: (\ @ a
                   ($dBinary :: Data.Binary.Class.Binary a)
                   (f :: GHC.IO.FilePath)
                   (v :: a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 System.IO.withBinaryFile1
                   @ ()
                   f
                   GHC.IO.IOMode.WriteMode
                   (\ (ds :: GHC.IO.Handle.Types.Handle)[OneShot]
                      (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    Data.ByteString.Lazy.appendFile2
                      ds
                      (Data.ByteString.Builder.toLazyByteString
                         (case (Data.Binary.Class.put @ a $dBinary v)
                                 `cast`
                               (Data.Binary.Put.N:PutM[0] <()>_N) of wild { Data.Binary.Put.PairS ds1 b ->
                          b }))
                      eta1)
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
trusted: trustworthy
require own pkg trusted: True
module header:
  Nothing
declaration docs:
arg docs:

